package com.jsk.zx.pay.controller;

import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.alipay.api.AlipayApiException;
import com.alipay.api.AlipayClient;
import com.alipay.api.DefaultAlipayClient;
import com.alipay.api.domain.AlipayTradeAppPayModel;
import com.alipay.api.internal.util.AlipaySignature;
import com.alipay.api.request.AlipayTradeAppPayRequest;
import com.alipay.api.response.AlipayTradeAppPayResponse;
import com.jsk.base.controller.BaseController;
import com.jsk.zx.pay.model.AlipayConfig;
import com.jsk.zx.pay.service.IPayUpdateOrderAndUser;
import com.jsk.zx.person.model.JskPersonOrder;

@Controller
@RequestMapping("/pay")
public class PayController extends BaseController {

	@Autowired
	private IPayUpdateOrderAndUser payUpdateService;
	
	@RequestMapping("/alipay")
	public String aliPay(String orderId) throws UnsupportedEncodingException {
		AlipayClient alipayClient = new DefaultAlipayClient(AlipayConfig.URL,
				AlipayConfig.APPID, AlipayConfig.RSA_PRIVATE_KEY, "json",
				AlipayConfig.CHARSET, AlipayConfig.ALIPAY_PUBLIC_KEY, "RSA2");

		JskPersonOrder order = payUpdateService.findPersonOrderByOrderId(orderId);
		String amount = new String(String.format("%.2f", order.getPrice())
				.getBytes("ISO-8859-1"), "UTF-8");
		// TODO Auto-generated catch block
		// 实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称：alipay.trade.app.pay
		AlipayTradeAppPayRequest request = new AlipayTradeAppPayRequest();

		// SDK已经封装掉了公共参数，这里只需要传入业务参数。以下方法为sdk的model入参方式(model和biz_content同时存在的情况下取biz_content)。
		AlipayTradeAppPayModel model = new AlipayTradeAppPayModel();

		model.setSubject("一个月会员");
		model.setOutTradeNo(order.getPkId());
		model.setTimeoutExpress("30m");
		model.setTotalAmount(amount);
		model.setProductCode("QUICK_MSECURITY_PAY");
		request.setBizModel(model);
		request.setNotifyUrl(AlipayConfig.return_url);// 回调地址
		String orderInfo = null;
		try { 
			// 这里和普通的接口调用不同，使用的是sdkExecute
			AlipayTradeAppPayResponse response = alipayClient
					.sdkExecute(request);
			// response.getBody()就是orderString 可以直接给客户端请求，无需再做处理。
			orderInfo = response.getBody();
		} catch (AlipayApiException e) {
			logger.error(e.getMessage(), e);
		}
		return orderInfo;
	}

	@RequestMapping("/aliscallbacks")
	public String bb(HttpServletRequest request, HttpServletResponse Response) throws UnsupportedEncodingException {
		// 获取支付宝POST过来反馈信息
		Map<String, String> params = new HashMap<String, String>();
		Map requestParams = request.getParameterMap();
		for (Iterator iter = requestParams.keySet().iterator(); iter.hasNext();) {
			String name = (String) iter.next();
			String[] values = (String[]) requestParams.get(name);
			String valueStr = "";
			for (int i = 0; i < values.length; i++) {
				valueStr = (i == values.length - 1) ? valueStr + values[i]
						: valueStr + values[i] + ",";
			}
			// 乱码解决，这段代码在出现乱码时使用。
			// valueStr = new String(valueStr.getBytes("ISO-8859-1"), "utf-8");
			params.put(name, valueStr);
		}
		//获取支付宝的通知返回参数
        //商户订单号
        String out_trade_no = new String(request.getParameter("out_trade_no").getBytes("ISO-8859-1"),"UTF-8");
        //支付宝交易号
        String trade_no = new String(request.getParameter("trade_no").getBytes("ISO-8859-1"),"UTF-8");
        //客户订单编号
        String auth_app_id = new String(request.getParameter("auth_app_id").getBytes("ISO-8859-1"),"UTF-8");
        //买家登录支付宝id
        String buyer_logon_id = new String(request.getParameter("buyer_logon_id").getBytes("ISO-8859-1"),"UTF-8");
        //交易时间
        String gmt_payment = new String(request.getParameter("gmt_payment").getBytes("ISO-8859-1"),"UTF-8");
        //交易金额
        String invoice_amount = new String(request.getParameter("invoice_amount").getBytes("ISO-8859-1"),"UTF-8");
		// 切记alipaypublickey是支付宝的公钥，请去open.alipay.com对应应用下查看。
		// boolean AlipaySignature.rsaCheckV1(Map<String, String> params, String
		// publicKey, String charset, String sign_type)
        boolean flag = false;
		try {
			flag = AlipaySignature.rsaCheckV1(params,
					AlipayConfig.ALIPAY_PUBLIC_KEY, AlipayConfig.CHARSET,
					"RSA2");
			if(flag){
				payUpdateService.updateOrderById(out_trade_no, "1");
				
			}
		} catch (AlipayApiException e) {
			logger.error(e.getMessage(), e);
		}
		
		
		return "";
	}
}
